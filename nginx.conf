# Default Nginx configuration
user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Events block
 events {
    worker_connections  1024;
}

# HTTP block
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  _;

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        # Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # Specify DNS resolver for variables, this is Google Public DNS
        resolver 8.8.8.8 8.8.4.4 [2001:4860:4860::]:8888 [2001:4860:4860::]:8844 valid=300s;
        resolver_timeout 5s;  # Timeout for DNS resolution

        location ~ ^/hog/static/(.*)$ {
            # Check Referer header
            set $valid_referer 0;
            if ($http_referer ~* "^https?://(localhost|([a-zA-Z0-9-]+)\.vivekraman\.dev)") {
                set $valid_referer 1;
            }
            if ($valid_referer = 0) {
                return 403;  # Return forbidden if the Referer header is invalid
            }

            set $posthog_static "https://us-assets.i.posthog.com/static/";
            # use variable to force proper DNS re-resolution, also must manually pass along path
            proxy_pass $posthog_static$1$is_args$args;
            proxy_set_header Host "us-assets.i.posthog.com";
        }

        location ~ ^/hog/(.*)$ {
            # Check Referer header
            set $valid_referer 0;
            if ($http_referer ~* "^https?://(localhost|([a-zA-Z0-9-]+)\.vivekraman\.dev)") {
                set $valid_referer 1;
            }
            if ($valid_referer = 0) {
                return 403;  # Return forbidden if the Referer header is invalid
            }

            set $posthog_main "https://us.i.posthog.com/";
            # use variable to force proper DNS re-resolution, also must manually pass along path
            proxy_pass $posthog_main$1$is_args$args;
            proxy_set_header Host "us.i.posthog.com";
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # Serve static files
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    }
}
